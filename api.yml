# This is the OpenAPI specification for your service. It is used to generate the client code.
# To generate the server code, use the Gradle task `openApiGenerate`. The 
# generated code will be placed in `build/generate-resources/main`.
#
# We will evaluate you based on how well you design your API.
# 1. How well it follows REST principles.
# 2. How easy it is to understand and use.
#
# References
# 1. https://swagger.io/specification/
openapi: "3.0.0"
info:
  version: 1.0.0
  title: User Service
  license:
    name: MIT
servers:
  - url: http://localhost
paths:
  /register:
    post:
      summary: User registration API
      operationId: register
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                phone_number:
                  type: string
                full_name:
                  type: string
                password:
                  type: string
              required:
                - phone_number
                - full_name
                - password
            encoding:
              # Don't percent-encode reserved characters in the values of "phone_number" and "password" fields
              phone_number:
                allow_reserved: true
              password:
                allow_reserved: true
      responses:
        '200':
          description: User registration successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RegistrationResponse"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /login:
    post:
      summary: User authentication API
      operationId: login
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                phone_number:
                  type: string
                password:
                  type: string
              required:
                - phone_number
                - password
            encoding:
              # Don't percent-encode reserved characters in the values of "phone_number" and "password" fields
              phone_number:
                allow_reserved: true
              password:
                allow_reserved: true
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginResponse"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /get-profile:
    get:
      summary: Get User Profile API
      operationId: get-profile
      parameters:
        - name: "Authorization"
          in: "header"
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success Get User Profile
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/GetProfileResponse"
        '403':
          description: Authorization Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /update-profile:
    post:
      summary: Update User Profile API
      operationId: update-profile
      parameters:
        - name: "Authorization"
          in: "header"
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                phone_number:
                  type: string
                password:
                  type: string
              required:
                - phone_number
                - password
            encoding:
              # Don't percent-encode reserved characters in the values of "phone_number" and "password" fields
              phone_number:
                allow_reserved: true
              password:
                allow_reserved: true
      responses:
        '200':
          description: Success Update User Profile
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/UpdateProfileResponse"
        '403':
          description: Authorization Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /hello:
    get:
      summary: This is just a test endpoint to get you started. Please delete this endpoint.
      operationId: hello
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Test return
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/HelloResponse"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
components:
  schemas:
    RegistrationResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    LoginResponse:
      type: object
      required:
        - user_id
        - token
      properties:
        user_id:
          type: integer
        token:
          type: string
    GetProfileResponse:
      type: object
      required:
        - full_name
        - phone_number
      properties:
        full_name:
          type: string
        phone_number:
          type: string
    UpdateProfileResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    HelloResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    ErrorResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
